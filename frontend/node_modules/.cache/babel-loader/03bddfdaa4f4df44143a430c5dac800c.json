{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Project\\\\Book-Social-Network\\\\frontend\\\\src\\\\modules\\\\Post\\\\Pages\\\\cmtPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PostService from \"../Service/service\";\nimport { useSelector } from \"react-redux\";\nimport NotifyService from \"../../../components/Notification/Service/service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CmtPost(_ref) {\n  _s();\n\n  let {\n    IdPost,\n    Author,\n    Content\n  } = _ref;\n  const user = useSelector(state => state.profile.value);\n  const socket = useSelector(state => state.socket.value);\n  const Id_Post = IdPost;\n  const [input, setInput] = useState(\"\");\n\n  const handleChange = event => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newForm = {\n      content: input,\n      author: user._id,\n      post: Id_Post.IdPost\n    };\n    await PostService.cmtPost(newForm); //notify\n\n    const newNotify = {\n      content: Content,\n      text: 'Comment the Post',\n      url: `http://localhost:3000/detailPost/${Id_Post}`,\n      recipient: Author,\n      image: Image\n    };\n    const res = await NotifyService.createNotify(newNotify);\n    socket === null || socket === void 0 ? void 0 : socket.emit('createNotify', { ...res.data.notify,\n      user: {\n        user: user.fullName,\n        avatar: Image\n      }\n    });\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-outline mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"comment\",\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"comment\",\n            onChange: handleChange,\n            value: input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CmtPost, \"utODWTXZrjaFgqiFJbgm2yKnhbo=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = CmtPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CmtPost\");","map":{"version":3,"names":["React","useState","PostService","useSelector","NotifyService","CmtPost","IdPost","Author","Content","user","state","profile","value","socket","Id_Post","input","setInput","handleChange","event","target","handleSubmit","preventDefault","newForm","content","author","_id","post","cmtPost","newNotify","text","url","recipient","image","Image","res","createNotify","emit","data","notify","fullName","avatar","window","location","reload"],"sources":["C:/Users/Admin/Documents/GitHub/Project/Book-Social-Network/frontend/src/modules/Post/Pages/cmtPost.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport PostService from \"../Service/service\";\r\nimport { useSelector } from \"react-redux\";\r\nimport NotifyService from \"../../../components/Notification/Service/service\";\r\n\r\nexport default function CmtPost({IdPost, Author, Content}){\r\n  const user = useSelector((state) =>state.profile.value)\r\n  const socket = useSelector((state) =>state.socket.value)\r\n  const Id_Post = IdPost;\r\n  const[input, setInput] = useState(\"\");\r\n\r\n  const handleChange = (event)=>{\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = async (event)=>{\r\n    event.preventDefault();\r\n\r\n    const newForm = {\r\n      content: input,\r\n      author: user._id,\r\n      post: Id_Post.IdPost\r\n    }\r\n\r\n    await PostService.cmtPost(newForm);\r\n\r\n    //notify\r\n    const newNotify = {\r\n      content: Content,\r\n      text:'Comment the Post',\r\n      url: `http://localhost:3000/detailPost/${Id_Post}`,\r\n      recipient: Author,\r\n      image: Image,\r\n    }\r\n\r\n    const res = await NotifyService.createNotify(newNotify)\r\n\r\n    socket?.emit('createNotify',{\r\n      ...res.data.notify,\r\n      user:{\r\n        user: user.fullName,\r\n        avatar: Image,\r\n      }\r\n    })\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <div className=\"\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-outline mb-4\">\r\n            <label className=\"form-label\" htmlFor=\"comment\">Comment</label>\r\n            {/*<input type=\"text\" id=\"comment\" name=\"comment\" className=\"form-control\" onChange={handleCmtChange} value={input.content}/>*/}\r\n            <input type=\"text\" name=\"comment\" onChange={handleChange} value={input}/>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">Comment</button>\r\n        </form>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,kDAA1B;;;AAEA,eAAe,SAASC,OAAT,OAA2C;EAAA;;EAAA,IAA1B;IAACC,MAAD;IAASC,MAAT;IAAiBC;EAAjB,CAA0B;EACxD,MAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAUA,KAAK,CAACC,OAAN,CAAcC,KAAzB,CAAxB;EACA,MAAMC,MAAM,GAAGV,WAAW,CAAEO,KAAD,IAAUA,KAAK,CAACG,MAAN,CAAaD,KAAxB,CAA1B;EACA,MAAME,OAAO,GAAGR,MAAhB;EACA,MAAK,CAACS,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAjC;;EAEA,MAAMgB,YAAY,GAAIC,KAAD,IAAS;IAC5BF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaP,KAAd,CAAR;EACD,CAFD;;EAIA,MAAMQ,YAAY,GAAG,MAAOF,KAAP,IAAe;IAClCA,KAAK,CAACG,cAAN;IAEA,MAAMC,OAAO,GAAG;MACdC,OAAO,EAAER,KADK;MAEdS,MAAM,EAAEf,IAAI,CAACgB,GAFC;MAGdC,IAAI,EAAEZ,OAAO,CAACR;IAHA,CAAhB;IAMA,MAAMJ,WAAW,CAACyB,OAAZ,CAAoBL,OAApB,CAAN,CATkC,CAWlC;;IACA,MAAMM,SAAS,GAAG;MAChBL,OAAO,EAAEf,OADO;MAEhBqB,IAAI,EAAC,kBAFW;MAGhBC,GAAG,EAAG,oCAAmChB,OAAQ,EAHjC;MAIhBiB,SAAS,EAAExB,MAJK;MAKhByB,KAAK,EAAEC;IALS,CAAlB;IAQA,MAAMC,GAAG,GAAG,MAAM9B,aAAa,CAAC+B,YAAd,CAA2BP,SAA3B,CAAlB;IAEAf,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEuB,IAAR,CAAa,cAAb,EAA4B,EAC1B,GAAGF,GAAG,CAACG,IAAJ,CAASC,MADc;MAE1B7B,IAAI,EAAC;QACHA,IAAI,EAAEA,IAAI,CAAC8B,QADR;QAEHC,MAAM,EAAEP;MAFL;IAFqB,CAA5B;IAQAQ,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACD,CA/BD;;EAiCA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,EAAf;MAAA,uBACE;QAAM,QAAQ,EAAEvB,YAAhB;QAAA,wBACE;UAAK,SAAS,EAAC,mBAAf;UAAA,wBACE;YAAO,SAAS,EAAC,YAAjB;YAA8B,OAAO,EAAC,SAAtC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAGE;YAAO,IAAI,EAAC,MAAZ;YAAmB,IAAI,EAAC,SAAxB;YAAkC,QAAQ,EAAEH,YAA5C;YAA0D,KAAK,EAAEF;UAAjE;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UAAQ,IAAI,EAAC,QAAb;UAAsB,SAAS,EAAC,2BAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAgBD;;GA3DuBV,O;UACTF,W,EACEA,W;;;KAFOE,O"},"metadata":{},"sourceType":"module"}