{"ast":null,"code":"import { Http } from \"../../../api/http\";\nconst API_ENDPOINT = {\n  GETSINGLEPOST: \"/post/getSinglePost\",\n  SHOWMOSTREADPOSTS: \"/post/showMostReadPosts\",\n  SHOWRANDOMREADPOST: '/post/showRanDomReadPosts',\n  SHOWPOST: \"/post/showPost\",\n  DETAILPOST: \"/post/detailPost\",\n  GETAUTHOR: \"/post/getAuthor\",\n  CREATEPOST: \"/post/createPost\",\n  UPDATEPOST: \"/post/updatePost\",\n  DELETEPOST: \"/post/deletePost\",\n  CMTDELETEPOST: \"/post/cmtDeletePost\",\n  CMTUPDATEPOST: \"/post/cmtUpdatePost\",\n  LIKEPOST: \"/post/likePost\",\n  DISLIKEPOST: \"/post/disLikePost\",\n  CMTGET: \"/post/cmtGet\",\n  CMTPOST: \"/post/cmtPost\",\n  GETCURRENTUSER: \"/currentUser\",\n  GETIMG: \"/img\"\n};\nclass PostServices {\n  showPost() {\n    return Http.get(API_ENDPOINT.SHOWPOST);\n  }\n  showMostReadPosts() {\n    return Http.get(API_ENDPOINT.SHOWMOSTREADPOSTS);\n  }\n  showRanDomReadPosts() {\n    return Http.get(API_ENDPOINT.SHOW);\n  }\n  getAuthor(id) {\n    return Http.get(API_ENDPOINT.GETAUTHOR + `/${id}`);\n  }\n  detailPost(id) {\n    return Http.get(API_ENDPOINT.DETAILPOST + `/${id}`);\n  }\n  createPost(data) {\n    return Http.createPost(API_ENDPOINT.CREATEPOST, data);\n  }\n  getSinglePost(id) {\n    return Http.get(API_ENDPOINT.GETSINGLEPOST + `/${id}`);\n  }\n  updatePost(data) {\n    return Http.post(API_ENDPOINT.UPDATEPOST, data);\n  }\n  deletePost(id) {\n    return Http.delete(API_ENDPOINT.DELETEPOST + `/${id}`);\n  }\n  likePost(id) {\n    return Http.putReactPost(API_ENDPOINT.LIKEPOST, {\n      id\n    });\n  }\n  disLikePost(id) {\n    return Http.putReactPost(API_ENDPOINT.DISLIKEPOST, {\n      id\n    });\n  }\n  cmtGet(id) {\n    return Http.get(API_ENDPOINT.CMTGET + `/${id}`);\n  }\n  cmtPost(data) {\n    return Http.putReactPost(API_ENDPOINT.CMTPOST, data);\n  }\n  cmtDeletePost(id) {\n    return Http.delete(API_ENDPOINT.CMTDELETEPOST + `/${id}`);\n  }\n  cmtUpdatePost(data) {\n    return Http.post(API_ENDPOINT.CMTUPDATEPOST, data);\n  }\n}\nconst PostService = new PostServices();\nexport default PostService;","map":{"version":3,"names":["Http","API_ENDPOINT","GETSINGLEPOST","SHOWMOSTREADPOSTS","SHOWRANDOMREADPOST","SHOWPOST","DETAILPOST","GETAUTHOR","CREATEPOST","UPDATEPOST","DELETEPOST","CMTDELETEPOST","CMTUPDATEPOST","LIKEPOST","DISLIKEPOST","CMTGET","CMTPOST","GETCURRENTUSER","GETIMG","PostServices","showPost","get","showMostReadPosts","showRanDomReadPosts","SHOW","getAuthor","id","detailPost","createPost","data","getSinglePost","updatePost","post","deletePost","delete","likePost","putReactPost","disLikePost","cmtGet","cmtPost","cmtDeletePost","cmtUpdatePost","PostService"],"sources":["C:/Users/Admin/Documents/GitHub/Project/Book-Social-Network/frontend/src/modules/Post/Service/service.js"],"sourcesContent":["import {Http} from \"../../../api/http\";\r\n\r\nconst API_ENDPOINT = {\r\n  GETSINGLEPOST: \"/post/getSinglePost\",\r\n  SHOWMOSTREADPOSTS: \"/post/showMostReadPosts\",\r\n  SHOWRANDOMREADPOST:'/post/showRanDomReadPosts',\r\n  SHOWPOST: \"/post/showPost\",\r\n  DETAILPOST: \"/post/detailPost\",\r\n  GETAUTHOR: \"/post/getAuthor\",\r\n  CREATEPOST: \"/post/createPost\",\r\n  UPDATEPOST: \"/post/updatePost\",\r\n  DELETEPOST: \"/post/deletePost\",\r\n  CMTDELETEPOST: \"/post/cmtDeletePost\",\r\n  CMTUPDATEPOST: \"/post/cmtUpdatePost\",\r\n  LIKEPOST: \"/post/likePost\",\r\n  DISLIKEPOST: \"/post/disLikePost\",\r\n  CMTGET: \"/post/cmtGet\",\r\n  CMTPOST: \"/post/cmtPost\",\r\n  GETCURRENTUSER: \"/currentUser\",\r\n  GETIMG: \"/img\"\r\n}\r\n\r\nclass PostServices{\r\n  showPost(){\r\n    return Http.get(API_ENDPOINT.SHOWPOST)\r\n  }\r\n\r\n  showMostReadPosts(){\r\n    return Http.get(API_ENDPOINT.SHOWMOSTREADPOSTS)\r\n  }\r\n\r\n  showRanDomReadPosts(){\r\n    return Http.get(API_ENDPOINT.SHOW)\r\n  }\r\n\r\n  getAuthor(id){\r\n    return Http.get(API_ENDPOINT.GETAUTHOR + `/${id}`)\r\n  }\r\n\r\n  detailPost(id){\r\n    return Http.get(API_ENDPOINT.DETAILPOST + `/${id}`)\r\n  }\r\n\r\n  createPost(data){\r\n    return Http.createPost(API_ENDPOINT.CREATEPOST, data)\r\n  }\r\n\r\n  getSinglePost(id){\r\n    return Http.get(API_ENDPOINT.GETSINGLEPOST + `/${id}`)\r\n  }\r\n\r\n  updatePost(data){\r\n    return Http.post(API_ENDPOINT.UPDATEPOST, data)\r\n  }\r\n\r\n  deletePost(id){\r\n    return Http.delete(API_ENDPOINT.DELETEPOST + `/${id}`)\r\n  }\r\n\r\n  likePost(id){\r\n    return Http.putReactPost(API_ENDPOINT.LIKEPOST, {id})\r\n  }\r\n\r\n  disLikePost(id){\r\n    return Http.putReactPost(API_ENDPOINT.DISLIKEPOST, {id})\r\n  }\r\n\r\n  cmtGet(id){\r\n    return Http.get(API_ENDPOINT.CMTGET + `/${id}`)\r\n  }\r\n\r\n  cmtPost(data){\r\n    return Http.putReactPost(API_ENDPOINT.CMTPOST, data)\r\n  }\r\n\r\n  cmtDeletePost(id){\r\n    return Http.delete(API_ENDPOINT.CMTDELETEPOST + `/${id}`)\r\n  }\r\n\r\n  cmtUpdatePost(data){\r\n    return Http.post(API_ENDPOINT.CMTUPDATEPOST, data)\r\n  }\r\n}\r\n\r\nconst PostService = new PostServices();\r\nexport default PostService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}