{"ast":null,"code":"/* global attachEvent */\nconst XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\n\nconst Polling = require(\"./polling\");\n\nconst Emitter = require(\"component-emitter\");\n\nconst {\n  pick\n} = require(\"../util\");\n\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n/**\n * Empty function\n */\n\n\nfunction empty() {}\n\nconst hasXHR2 = function () {\n  const xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port; // some user agents have empty `location.port`\n\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n\n\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n\n\n  request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    Object.assign(opts, {\n      xd: this.xd,\n      xs: this.xs\n    }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n\n\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    const self = this;\n    req.on(\"success\", fn);\n    req.on(\"error\", function (err) {\n      self.onError(\"xhr post error\", err);\n    });\n  }\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n\n\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    const self = this;\n    req.on(\"data\", function (data) {\n      self.onData(data);\n    });\n    req.on(\"error\", function (err) {\n      self.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n    this.create();\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n\n\n  create() {\n    const opts = pick(this.opts, \"agent\", \"enablesXDR\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n    const xhr = this.xhr = new XMLHttpRequest(opts);\n    const self = this;\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {} // ie6 check\n\n\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = function () {\n          self.onLoad();\n        };\n\n        xhr.onerror = function () {\n          self.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = function () {\n          if (4 !== xhr.readyState) return;\n\n          if (200 === xhr.status || 1223 === xhr.status) {\n            self.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(function () {\n              self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(function () {\n        self.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n\n\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n\n\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n\n\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n\n\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    } // xmlhttprequest\n\n\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n\n\n  onLoad() {\n    const data = this.xhr.responseText;\n\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n\n\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n\n\n  abort() {\n    this.cleanup();\n  }\n\n}\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;","map":{"version":3,"names":["XMLHttpRequest","require","Polling","Emitter","pick","globalThis","debug","empty","hasXHR2","xhr","xdomain","responseType","XHR","constructor","opts","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","request","Object","assign","Request","uri","doWrite","data","fn","req","method","self","on","err","onError","doPoll","onData","pollXhr","async","undefined","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","hasXDR","onload","onLoad","onerror","responseText","onreadystatechange","readyState","status","setTimeout","send","document","index","requestsCount","requests","onSuccess","emit","cleanup","fromError","abort","XDomainRequest","enablesXDR","attachEvent","unloadHandler","addEventListener","terminationEvent","module","exports"],"sources":["C:/Users/Admin/Documents/GitHub/Project/Book-Social-Network/frontend/node_modules/engine.io-client/lib/transports/polling-xhr.js"],"sourcesContent":["/* global attachEvent */\n\nconst XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    const self = this;\n    req.on(\"success\", fn);\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    const self = this;\n    req.on(\"data\", function(data) {\n      self.onData(data);\n    });\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\",\n      \"autoUnref\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n    const self = this;\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = function() {\n          self.onLoad();\n        };\n        xhr.onerror = function() {\n          self.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = function() {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            self.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(function() {\n              self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(function() {\n        self.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n"],"mappings":"AAAA;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,iDAAD,CAA9B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,mBAAD,CAAvB;;AACA,MAAM;EAAEG;AAAF,IAAWH,OAAO,CAAC,SAAD,CAAxB;;AACA,MAAMI,UAAU,GAAGJ,OAAO,CAAC,eAAD,CAA1B;;AAEA,MAAMK,KAAK,GAAGL,OAAO,CAAC,OAAD,CAAP,CAAiB,8BAAjB,CAAd;AAEA;AACA;AACA;;;AAEA,SAASM,KAAT,GAAiB,CAAE;;AAEnB,MAAMC,OAAO,GAAI,YAAW;EAC1B,MAAMC,GAAG,GAAG,IAAIT,cAAJ,CAAmB;IAAEU,OAAO,EAAE;EAAX,CAAnB,CAAZ;EACA,OAAO,QAAQD,GAAG,CAACE,YAAnB;AACD,CAHe,EAAhB;;AAKA,MAAMC,GAAN,SAAkBV,OAAlB,CAA0B;EACxB;AACF;AACA;AACA;AACA;AACA;EACEW,WAAW,CAACC,IAAD,EAAO;IAChB,MAAMA,IAAN;;IAEA,IAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;MACnC,MAAMC,KAAK,GAAG,aAAaD,QAAQ,CAACE,QAApC;MACA,IAAIC,IAAI,GAAGH,QAAQ,CAACG,IAApB,CAFmC,CAInC;;MACA,IAAI,CAACA,IAAL,EAAW;QACTA,IAAI,GAAGF,KAAK,GAAG,GAAH,GAAS,EAArB;MACD;;MAED,KAAKG,EAAL,GACG,OAAOJ,QAAP,KAAoB,WAApB,IACCD,IAAI,CAACM,QAAL,KAAkBL,QAAQ,CAACK,QAD7B,IAEAF,IAAI,KAAKJ,IAAI,CAACI,IAHhB;MAIA,KAAKG,EAAL,GAAUP,IAAI,CAACQ,MAAL,KAAgBN,KAA1B;IACD;IACD;AACJ;AACA;;;IACI,MAAMO,WAAW,GAAGT,IAAI,IAAIA,IAAI,CAACS,WAAjC;IACA,KAAKC,cAAL,GAAsBhB,OAAO,IAAI,CAACe,WAAlC;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEE,OAAO,GAAY;IAAA,IAAXX,IAAW,uEAAJ,EAAI;IACjBY,MAAM,CAACC,MAAP,CAAcb,IAAd,EAAoB;MAAEK,EAAE,EAAE,KAAKA,EAAX;MAAeE,EAAE,EAAE,KAAKA;IAAxB,CAApB,EAAkD,KAAKP,IAAvD;IACA,OAAO,IAAIc,OAAJ,CAAY,KAAKC,GAAL,EAAZ,EAAwBf,IAAxB,CAAP;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEgB,OAAO,CAACC,IAAD,EAAOC,EAAP,EAAW;IAChB,MAAMC,GAAG,GAAG,KAAKR,OAAL,CAAa;MACvBS,MAAM,EAAE,MADe;MAEvBH,IAAI,EAAEA;IAFiB,CAAb,CAAZ;IAIA,MAAMI,IAAI,GAAG,IAAb;IACAF,GAAG,CAACG,EAAJ,CAAO,SAAP,EAAkBJ,EAAlB;IACAC,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgB,UAASC,GAAT,EAAc;MAC5BF,IAAI,CAACG,OAAL,CAAa,gBAAb,EAA+BD,GAA/B;IACD,CAFD;EAGD;EAED;AACF;AACA;AACA;AACA;;;EACEE,MAAM,GAAG;IACPjC,KAAK,CAAC,UAAD,CAAL;IACA,MAAM2B,GAAG,GAAG,KAAKR,OAAL,EAAZ;IACA,MAAMU,IAAI,GAAG,IAAb;IACAF,GAAG,CAACG,EAAJ,CAAO,MAAP,EAAe,UAASL,IAAT,EAAe;MAC5BI,IAAI,CAACK,MAAL,CAAYT,IAAZ;IACD,CAFD;IAGAE,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgB,UAASC,GAAT,EAAc;MAC5BF,IAAI,CAACG,OAAL,CAAa,gBAAb,EAA+BD,GAA/B;IACD,CAFD;IAGA,KAAKI,OAAL,GAAeR,GAAf;EACD;;AA9EuB;;AAiF1B,MAAML,OAAN,SAAsBzB,OAAtB,CAA8B;EAC5B;AACF;AACA;AACA;AACA;AACA;EACEU,WAAW,CAACgB,GAAD,EAAMf,IAAN,EAAY;IACrB;IACA,KAAKA,IAAL,GAAYA,IAAZ;IAEA,KAAKoB,MAAL,GAAcpB,IAAI,CAACoB,MAAL,IAAe,KAA7B;IACA,KAAKL,GAAL,GAAWA,GAAX;IACA,KAAKa,KAAL,GAAa,UAAU5B,IAAI,CAAC4B,KAA5B;IACA,KAAKX,IAAL,GAAYY,SAAS,KAAK7B,IAAI,CAACiB,IAAnB,GAA0BjB,IAAI,CAACiB,IAA/B,GAAsC,IAAlD;IAEA,KAAKa,MAAL;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEA,MAAM,GAAG;IACP,MAAM9B,IAAI,GAAGV,IAAI,CACf,KAAKU,IADU,EAEf,OAFe,EAGf,YAHe,EAIf,KAJe,EAKf,KALe,EAMf,YANe,EAOf,MAPe,EAQf,IARe,EASf,SATe,EAUf,oBAVe,EAWf,WAXe,CAAjB;IAaAA,IAAI,CAACJ,OAAL,GAAe,CAAC,CAAC,KAAKI,IAAL,CAAUK,EAA3B;IACAL,IAAI,CAAC+B,OAAL,GAAe,CAAC,CAAC,KAAK/B,IAAL,CAAUO,EAA3B;IAEA,MAAMZ,GAAG,GAAI,KAAKA,GAAL,GAAW,IAAIT,cAAJ,CAAmBc,IAAnB,CAAxB;IACA,MAAMqB,IAAI,GAAG,IAAb;;IAEA,IAAI;MACF7B,KAAK,CAAC,iBAAD,EAAoB,KAAK4B,MAAzB,EAAiC,KAAKL,GAAtC,CAAL;MACApB,GAAG,CAACqC,IAAJ,CAAS,KAAKZ,MAAd,EAAsB,KAAKL,GAA3B,EAAgC,KAAKa,KAArC;;MACA,IAAI;QACF,IAAI,KAAK5B,IAAL,CAAUiC,YAAd,EAA4B;UAC1BtC,GAAG,CAACuC,qBAAJ,IAA6BvC,GAAG,CAACuC,qBAAJ,CAA0B,IAA1B,CAA7B;;UACA,KAAK,IAAIC,CAAT,IAAc,KAAKnC,IAAL,CAAUiC,YAAxB,EAAsC;YACpC,IAAI,KAAKjC,IAAL,CAAUiC,YAAV,CAAuBG,cAAvB,CAAsCD,CAAtC,CAAJ,EAA8C;cAC5CxC,GAAG,CAAC0C,gBAAJ,CAAqBF,CAArB,EAAwB,KAAKnC,IAAL,CAAUiC,YAAV,CAAuBE,CAAvB,CAAxB;YACD;UACF;QACF;MACF,CATD,CASE,OAAOG,CAAP,EAAU,CAAE;;MAEd,IAAI,WAAW,KAAKlB,MAApB,EAA4B;QAC1B,IAAI;UACFzB,GAAG,CAAC0C,gBAAJ,CAAqB,cAArB,EAAqC,0BAArC;QACD,CAFD,CAEE,OAAOC,CAAP,EAAU,CAAE;MACf;;MAED,IAAI;QACF3C,GAAG,CAAC0C,gBAAJ,CAAqB,QAArB,EAA+B,KAA/B;MACD,CAFD,CAEE,OAAOC,CAAP,EAAU,CAAE,CAtBZ,CAwBF;;;MACA,IAAI,qBAAqB3C,GAAzB,EAA8B;QAC5BA,GAAG,CAAC4C,eAAJ,GAAsB,KAAKvC,IAAL,CAAUuC,eAAhC;MACD;;MAED,IAAI,KAAKvC,IAAL,CAAUwC,cAAd,EAA8B;QAC5B7C,GAAG,CAAC8C,OAAJ,GAAc,KAAKzC,IAAL,CAAUwC,cAAxB;MACD;;MAED,IAAI,KAAKE,MAAL,EAAJ,EAAmB;QACjB/C,GAAG,CAACgD,MAAJ,GAAa,YAAW;UACtBtB,IAAI,CAACuB,MAAL;QACD,CAFD;;QAGAjD,GAAG,CAACkD,OAAJ,GAAc,YAAW;UACvBxB,IAAI,CAACG,OAAL,CAAa7B,GAAG,CAACmD,YAAjB;QACD,CAFD;MAGD,CAPD,MAOO;QACLnD,GAAG,CAACoD,kBAAJ,GAAyB,YAAW;UAClC,IAAI,MAAMpD,GAAG,CAACqD,UAAd,EAA0B;;UAC1B,IAAI,QAAQrD,GAAG,CAACsD,MAAZ,IAAsB,SAAStD,GAAG,CAACsD,MAAvC,EAA+C;YAC7C5B,IAAI,CAACuB,MAAL;UACD,CAFD,MAEO;YACL;YACA;YACAM,UAAU,CAAC,YAAW;cACpB7B,IAAI,CAACG,OAAL,CAAa,OAAO7B,GAAG,CAACsD,MAAX,KAAsB,QAAtB,GAAiCtD,GAAG,CAACsD,MAArC,GAA8C,CAA3D;YACD,CAFS,EAEP,CAFO,CAAV;UAGD;QACF,CAXD;MAYD;;MAEDzD,KAAK,CAAC,aAAD,EAAgB,KAAKyB,IAArB,CAAL;MACAtB,GAAG,CAACwD,IAAJ,CAAS,KAAKlC,IAAd;IACD,CAzDD,CAyDE,OAAOqB,CAAP,EAAU;MACV;MACA;MACA;MACAY,UAAU,CAAC,YAAW;QACpB7B,IAAI,CAACG,OAAL,CAAac,CAAb;MACD,CAFS,EAEP,CAFO,CAAV;MAGA;IACD;;IAED,IAAI,OAAOc,QAAP,KAAoB,WAAxB,EAAqC;MACnC,KAAKC,KAAL,GAAavC,OAAO,CAACwC,aAAR,EAAb;MACAxC,OAAO,CAACyC,QAAR,CAAiB,KAAKF,KAAtB,IAA+B,IAA/B;IACD;EACF;EAED;AACF;AACA;AACA;AACA;;;EACEG,SAAS,GAAG;IACV,KAAKC,IAAL,CAAU,SAAV;IACA,KAAKC,OAAL;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEhC,MAAM,CAACT,IAAD,EAAO;IACX,KAAKwC,IAAL,CAAU,MAAV,EAAkBxC,IAAlB;IACA,KAAKuC,SAAL;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEhC,OAAO,CAACD,GAAD,EAAM;IACX,KAAKkC,IAAL,CAAU,OAAV,EAAmBlC,GAAnB;IACA,KAAKmC,OAAL,CAAa,IAAb;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEA,OAAO,CAACC,SAAD,EAAY;IACjB,IAAI,gBAAgB,OAAO,KAAKhE,GAA5B,IAAmC,SAAS,KAAKA,GAArD,EAA0D;MACxD;IACD,CAHgB,CAIjB;;;IACA,IAAI,KAAK+C,MAAL,EAAJ,EAAmB;MACjB,KAAK/C,GAAL,CAASgD,MAAT,GAAkB,KAAKhD,GAAL,CAASkD,OAAT,GAAmBpD,KAArC;IACD,CAFD,MAEO;MACL,KAAKE,GAAL,CAASoD,kBAAT,GAA8BtD,KAA9B;IACD;;IAED,IAAIkE,SAAJ,EAAe;MACb,IAAI;QACF,KAAKhE,GAAL,CAASiE,KAAT;MACD,CAFD,CAEE,OAAOtB,CAAP,EAAU,CAAE;IACf;;IAED,IAAI,OAAOc,QAAP,KAAoB,WAAxB,EAAqC;MACnC,OAAOtC,OAAO,CAACyC,QAAR,CAAiB,KAAKF,KAAtB,CAAP;IACD;;IAED,KAAK1D,GAAL,GAAW,IAAX;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEiD,MAAM,GAAG;IACP,MAAM3B,IAAI,GAAG,KAAKtB,GAAL,CAASmD,YAAtB;;IACA,IAAI7B,IAAI,KAAK,IAAb,EAAmB;MACjB,KAAKS,MAAL,CAAYT,IAAZ;IACD;EACF;EAED;AACF;AACA;AACA;AACA;;;EACEyB,MAAM,GAAG;IACP,OAAO,OAAOmB,cAAP,KAA0B,WAA1B,IAAyC,CAAC,KAAKtD,EAA/C,IAAqD,KAAKuD,UAAjE;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEF,KAAK,GAAG;IACN,KAAKF,OAAL;EACD;;AA5M2B;AA+M9B;AACA;AACA;AACA;AACA;;;AAEA5C,OAAO,CAACwC,aAAR,GAAwB,CAAxB;AACAxC,OAAO,CAACyC,QAAR,GAAmB,EAAnB;;AAEA,IAAI,OAAOH,QAAP,KAAoB,WAAxB,EAAqC;EACnC,IAAI,OAAOW,WAAP,KAAuB,UAA3B,EAAuC;IACrCA,WAAW,CAAC,UAAD,EAAaC,aAAb,CAAX;EACD,CAFD,MAEO,IAAI,OAAOC,gBAAP,KAA4B,UAAhC,EAA4C;IACjD,MAAMC,gBAAgB,GAAG,gBAAgB3E,UAAhB,GAA6B,UAA7B,GAA0C,QAAnE;IACA0E,gBAAgB,CAACC,gBAAD,EAAmBF,aAAnB,EAAkC,KAAlC,CAAhB;EACD;AACF;;AAED,SAASA,aAAT,GAAyB;EACvB,KAAK,IAAI7B,CAAT,IAAcrB,OAAO,CAACyC,QAAtB,EAAgC;IAC9B,IAAIzC,OAAO,CAACyC,QAAR,CAAiBnB,cAAjB,CAAgCD,CAAhC,CAAJ,EAAwC;MACtCrB,OAAO,CAACyC,QAAR,CAAiBpB,CAAjB,EAAoByB,KAApB;IACD;EACF;AACF;;AAEDO,MAAM,CAACC,OAAP,GAAiBtE,GAAjB;AACAqE,MAAM,CAACC,OAAP,CAAetD,OAAf,GAAyBA,OAAzB"},"metadata":{},"sourceType":"script"}