{"ast":null,"code":"import { Http } from \"../../../api/http\";\nconst API_ENDPOINT = {\n  GETALLUSER: \"/auth/getAllUser\",\n  LOGIN: \"/auth/login\",\n  LOGINGG: \"/auth/loginGG\",\n  REGISTER: \"/auth/register\",\n  LOGOUT: \"/auth/logout\",\n  BLOCKACCOUNT: \"/auth/blockAccount\",\n  RESTOREACCOUNT: \"/auth/restoreAccount\",\n  TRASHACCOUNT: \"/auth/trashAccount\"\n};\nclass AccountServices {\n  getAllUser() {\n    return Http.get(API_ENDPOINT.GETALLUSER);\n  }\n  login(data) {\n    return Http.post(API_ENDPOINT.LOGIN, data);\n  }\n  loginGG(data) {\n    return Http.post(API_ENDPOINT.LOGINGG, data);\n  }\n  register(data) {\n    return Http.register(API_ENDPOINT.REGISTER, data);\n  }\n  blockAccount(id) {\n    return Http.delete(API_ENDPOINT.BLOCKACCOUNT + `/${id}`);\n  }\n  restoreAccount(id) {\n    return Http.patch(API_ENDPOINT.RESTOREACCOUNT + `/${id}`);\n  }\n  trashAccount() {\n    return Http.get(API_ENDPOINT.TRASHACCOUNT);\n  }\n  logOut() {\n    return Http.post(API_ENDPOINT.LOGOUT);\n  }\n}\nconst AccountService = new AccountServices();\nexport default AccountService;","map":{"version":3,"names":["Http","API_ENDPOINT","GETALLUSER","LOGIN","LOGINGG","REGISTER","LOGOUT","BLOCKACCOUNT","RESTOREACCOUNT","TRASHACCOUNT","AccountServices","getAllUser","get","login","data","post","loginGG","register","blockAccount","id","delete","restoreAccount","patch","trashAccount","logOut","AccountService"],"sources":["C:/Users/Admin/Documents/GitHub/Project/Book-Social-Network/frontend/src/modules/Auth/Service/service.js"],"sourcesContent":["import { Http } from \"../../../api/http\";\r\n\r\nconst API_ENDPOINT = {\r\n    GETALLUSER: \"/auth/getAllUser\",\r\n    LOGIN: \"/auth/login\",\r\n    LOGINGG: \"/auth/loginGG\",\r\n    REGISTER: \"/auth/register\",\r\n    LOGOUT: \"/auth/logout\",\r\n    BLOCKACCOUNT: \"/auth/blockAccount\",\r\n    RESTOREACCOUNT: \"/auth/restoreAccount\",\r\n    TRASHACCOUNT: \"/auth/trashAccount\",\r\n}\r\n\r\nclass AccountServices{\r\n    getAllUser(){\r\n        return Http.get(API_ENDPOINT.GETALLUSER)\r\n    }\r\n    login(data){\r\n        return Http.post(API_ENDPOINT.LOGIN, data)\r\n    }\r\n    loginGG(data){\r\n        return Http.post(API_ENDPOINT.LOGINGG, data)\r\n    }\r\n    register(data){\r\n        return Http.register(API_ENDPOINT.REGISTER, data)\r\n    }\r\n    blockAccount(id){\r\n        return Http.delete(API_ENDPOINT.BLOCKACCOUNT + `/${id}`)\r\n    }\r\n    restoreAccount(id){\r\n        return Http.patch(API_ENDPOINT.RESTOREACCOUNT + `/${id}`)\r\n    }\r\n    trashAccount(){\r\n        return Http.get(API_ENDPOINT.TRASHACCOUNT)\r\n    }\r\n    logOut(){\r\n        return Http.post(API_ENDPOINT.LOGOUT)\r\n    }\r\n}\r\n\r\nconst AccountService = new AccountServices();\r\nexport default AccountService;"],"mappings":"AAAA,SAASA,IAAI,QAAQ,mBAAmB;AAExC,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,kBAAkB;EAC9BC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,eAAe;EACxBC,QAAQ,EAAE,gBAAgB;EAC1BC,MAAM,EAAE,cAAc;EACtBC,YAAY,EAAE,oBAAoB;EAClCC,cAAc,EAAE,sBAAsB;EACtCC,YAAY,EAAE;AAClB,CAAC;AAED,MAAMC,eAAe;EACjBC,UAAUA,CAAA,EAAE;IACR,OAAOX,IAAI,CAACY,GAAG,CAACX,YAAY,CAACC,UAAU,CAAC;EAC5C;EACAW,KAAKA,CAACC,IAAI,EAAC;IACP,OAAOd,IAAI,CAACe,IAAI,CAACd,YAAY,CAACE,KAAK,EAAEW,IAAI,CAAC;EAC9C;EACAE,OAAOA,CAACF,IAAI,EAAC;IACT,OAAOd,IAAI,CAACe,IAAI,CAACd,YAAY,CAACG,OAAO,EAAEU,IAAI,CAAC;EAChD;EACAG,QAAQA,CAACH,IAAI,EAAC;IACV,OAAOd,IAAI,CAACiB,QAAQ,CAAChB,YAAY,CAACI,QAAQ,EAAES,IAAI,CAAC;EACrD;EACAI,YAAYA,CAACC,EAAE,EAAC;IACZ,OAAOnB,IAAI,CAACoB,MAAM,CAACnB,YAAY,CAACM,YAAY,GAAI,IAAGY,EAAG,EAAC,CAAC;EAC5D;EACAE,cAAcA,CAACF,EAAE,EAAC;IACd,OAAOnB,IAAI,CAACsB,KAAK,CAACrB,YAAY,CAACO,cAAc,GAAI,IAAGW,EAAG,EAAC,CAAC;EAC7D;EACAI,YAAYA,CAAA,EAAE;IACV,OAAOvB,IAAI,CAACY,GAAG,CAACX,YAAY,CAACQ,YAAY,CAAC;EAC9C;EACAe,MAAMA,CAAA,EAAE;IACJ,OAAOxB,IAAI,CAACe,IAAI,CAACd,YAAY,CAACK,MAAM,CAAC;EACzC;AACJ;AAEA,MAAMmB,cAAc,GAAG,IAAIf,eAAe,EAAE;AAC5C,eAAee,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}