{"ast":null,"code":"import { Http } from \"../../../api/http\";\nconst API_ENDPOINT = {\n  GETSINGLEPOST: \"/post/getSinglePost\",\n  SHOWMOSTREADPOSTS: \"/post/showMostReadPosts\",\n  SHOWRANDOMREADPOST: '/post/showRanDomReadPosts',\n  SHOWPOST: \"/post/showPost\",\n  SHOWOPINIONPOST: \"/post/showOpinionPost\",\n  SHOWBOOKPOST: \"/post/showBookPost\",\n  DETAILPOST: \"/post/detailPost\",\n  GETAUTHOR: \"/post/getAuthor\",\n  CREATEPOST: \"/post/createPost\",\n  UPDATEPOST: \"/post/updatePost\",\n  DELETEPOST: \"/post/deletePost\",\n  CMTDELETEPOST: \"/post/cmtDeletePost\",\n  CMTUPDATEPOST: \"/post/cmtUpdatePost\",\n  LIKEPOST: \"/post/likePost\",\n  DISLIKEPOST: \"/post/disLikePost\",\n  CMTGET: \"/post/cmtGet\",\n  CMTPOST: \"/post/cmtPost\",\n  LISTSAVEDPOST: \"/post/getSavedPost\",\n  SAVEPOST: \"/post/savePost\",\n  HIDEPOST: \"/post/hidePost\",\n  REPORTPOST: \"/post/reportPost\",\n  GETCURRENTUSER: \"/currentUser\",\n  GETIMG: \"/img\"\n};\nclass PostServices {\n  showPost() {\n    return Http.get(API_ENDPOINT.SHOWPOST);\n  }\n  showBookPost() {\n    return Http.get(API_ENDPOINT.SHOWBOOKPOST);\n  }\n  showOpinionPost() {\n    return Http.get(API_ENDPOINT.SHOWOPINIONPOST);\n  }\n  showMostReadPosts() {\n    return Http.get(API_ENDPOINT.SHOWMOSTREADPOSTS);\n  }\n  showRanDomReadPosts() {\n    return Http.get(API_ENDPOINT.SHOWRANDOMREADPOST);\n  }\n  getAuthor(id) {\n    return Http.get(API_ENDPOINT.GETAUTHOR + `/${id}`);\n  }\n  detailPost(id) {\n    return Http.get(API_ENDPOINT.DETAILPOST + `/${id}`);\n  }\n  createPost(data) {\n    return Http.createPost(API_ENDPOINT.CREATEPOST, data);\n  }\n  getSinglePost(id) {\n    return Http.get(API_ENDPOINT.GETSINGLEPOST + `/${id}`);\n  }\n  updatePost(data) {\n    return Http.post(API_ENDPOINT.UPDATEPOST, data);\n  }\n  deletePost(id) {\n    return Http.delete(API_ENDPOINT.DELETEPOST + `/${id}`);\n  }\n  likePost(id) {\n    return Http.putReactPost(API_ENDPOINT.LIKEPOST, {\n      id\n    });\n  }\n  disLikePost(id) {\n    return Http.putReactPost(API_ENDPOINT.DISLIKEPOST, {\n      id\n    });\n  }\n  listSavedPost() {\n    return Http.get(API_ENDPOINT.LISTSAVEDPOST);\n  }\n  savePost(id) {\n    return Http.putReactPost(API_ENDPOINT.SAVEPOST, {\n      id\n    });\n  }\n  hidePost(id) {\n    return Http.putReactPost(API_ENDPOINT.HIDEPOST, {\n      id\n    });\n  }\n  reportPost(id) {\n    return Http.putReactPost(API_ENDPOINT.REPORTPOST, {\n      id\n    });\n  }\n  cmtGet(id) {\n    return Http.get(API_ENDPOINT.CMTGET + `/${id}`);\n  }\n  cmtPost(data) {\n    return Http.putReactPost(API_ENDPOINT.CMTPOST, data);\n  }\n  cmtDeletePost(id) {\n    return Http.delete(API_ENDPOINT.CMTDELETEPOST + `/${id}`);\n  }\n  cmtUpdatePost(data) {\n    return Http.post(API_ENDPOINT.CMTUPDATEPOST, data);\n  }\n}\nconst PostService = new PostServices();\nexport default PostService;","map":{"version":3,"names":["Http","API_ENDPOINT","GETSINGLEPOST","SHOWMOSTREADPOSTS","SHOWRANDOMREADPOST","SHOWPOST","SHOWOPINIONPOST","SHOWBOOKPOST","DETAILPOST","GETAUTHOR","CREATEPOST","UPDATEPOST","DELETEPOST","CMTDELETEPOST","CMTUPDATEPOST","LIKEPOST","DISLIKEPOST","CMTGET","CMTPOST","LISTSAVEDPOST","SAVEPOST","HIDEPOST","REPORTPOST","GETCURRENTUSER","GETIMG","PostServices","showPost","get","showBookPost","showOpinionPost","showMostReadPosts","showRanDomReadPosts","getAuthor","id","detailPost","createPost","data","getSinglePost","updatePost","post","deletePost","delete","likePost","putReactPost","disLikePost","listSavedPost","savePost","hidePost","reportPost","cmtGet","cmtPost","cmtDeletePost","cmtUpdatePost","PostService"],"sources":["C:/Users/Admin/Documents/GitHub/Project/Book-Social-Network/frontend/src/modules/Post/Service/service.js"],"sourcesContent":["import {Http} from \"../../../api/http\";\r\n\r\nconst API_ENDPOINT = {\r\n  GETSINGLEPOST: \"/post/getSinglePost\",\r\n  SHOWMOSTREADPOSTS: \"/post/showMostReadPosts\",\r\n  SHOWRANDOMREADPOST:'/post/showRanDomReadPosts',\r\n  SHOWPOST: \"/post/showPost\",\r\n  SHOWOPINIONPOST: \"/post/showOpinionPost\",\r\n  SHOWBOOKPOST: \"/post/showBookPost\",\r\n  DETAILPOST: \"/post/detailPost\",\r\n  GETAUTHOR: \"/post/getAuthor\",\r\n  CREATEPOST: \"/post/createPost\",\r\n  UPDATEPOST: \"/post/updatePost\",\r\n  DELETEPOST: \"/post/deletePost\",\r\n  CMTDELETEPOST: \"/post/cmtDeletePost\",\r\n  CMTUPDATEPOST: \"/post/cmtUpdatePost\",\r\n  LIKEPOST: \"/post/likePost\",\r\n  DISLIKEPOST: \"/post/disLikePost\",\r\n  CMTGET: \"/post/cmtGet\",\r\n  CMTPOST: \"/post/cmtPost\",\r\n  LISTSAVEDPOST: \"/post/getSavedPost\",\r\n  SAVEPOST: \"/post/savePost\",\r\n  HIDEPOST: \"/post/hidePost\",\r\n  REPORTPOST: \"/post/reportPost\",\r\n  GETCURRENTUSER: \"/currentUser\",\r\n  GETIMG: \"/img\"\r\n}\r\n\r\nclass PostServices{\r\n  showPost(){\r\n    return Http.get(API_ENDPOINT.SHOWPOST)\r\n  }\r\n\r\n  showBookPost(){\r\n    return Http.get(API_ENDPOINT.SHOWBOOKPOST)\r\n  }\r\n\r\n  showOpinionPost(){\r\n    return Http.get(API_ENDPOINT.SHOWOPINIONPOST)\r\n  }\r\n\r\n  showMostReadPosts(){\r\n    return Http.get(API_ENDPOINT.SHOWMOSTREADPOSTS)\r\n  }\r\n\r\n  showRanDomReadPosts(){\r\n    return Http.get(API_ENDPOINT.SHOWRANDOMREADPOST)\r\n  }\r\n\r\n  getAuthor(id){\r\n    return Http.get(API_ENDPOINT.GETAUTHOR + `/${id}`)\r\n  }\r\n\r\n  detailPost(id){\r\n    return Http.get(API_ENDPOINT.DETAILPOST + `/${id}`)\r\n  }\r\n\r\n  createPost(data){\r\n    return Http.createPost(API_ENDPOINT.CREATEPOST, data)\r\n  }\r\n\r\n  getSinglePost(id){\r\n    return Http.get(API_ENDPOINT.GETSINGLEPOST + `/${id}`)\r\n  }\r\n\r\n  updatePost(data){\r\n    return Http.post(API_ENDPOINT.UPDATEPOST, data)\r\n  }\r\n\r\n  deletePost(id){\r\n    return Http.delete(API_ENDPOINT.DELETEPOST + `/${id}`)\r\n  }\r\n\r\n  likePost(id){\r\n    return Http.putReactPost(API_ENDPOINT.LIKEPOST, {id})\r\n  }\r\n\r\n  disLikePost(id){\r\n    return Http.putReactPost(API_ENDPOINT.DISLIKEPOST, {id})\r\n  }\r\n\r\n  listSavedPost(){\r\n    return Http.get(API_ENDPOINT.LISTSAVEDPOST)\r\n  }\r\n\r\n  savePost(id){\r\n    return Http.putReactPost(API_ENDPOINT.SAVEPOST, {id})\r\n  }\r\n\r\n  hidePost(id){\r\n    return Http.putReactPost(API_ENDPOINT.HIDEPOST, {id})\r\n  }\r\n\r\n  reportPost(id){\r\n    return Http.putReactPost(API_ENDPOINT.REPORTPOST, {id})\r\n  }\r\n\r\n  cmtGet(id){\r\n    return Http.get(API_ENDPOINT.CMTGET + `/${id}`)\r\n  }\r\n\r\n  cmtPost(data){\r\n    return Http.putReactPost(API_ENDPOINT.CMTPOST, data)\r\n  }\r\n\r\n  cmtDeletePost(id){\r\n    return Http.delete(API_ENDPOINT.CMTDELETEPOST + `/${id}`)\r\n  }\r\n\r\n  cmtUpdatePost(data){\r\n    return Http.post(API_ENDPOINT.CMTUPDATEPOST, data)\r\n  }\r\n}\r\n\r\nconst PostService = new PostServices();\r\nexport default PostService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}