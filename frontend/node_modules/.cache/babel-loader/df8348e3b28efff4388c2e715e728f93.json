{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StrictEventEmitter = void 0;\n\nconst Emitter = require(\"component-emitter\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\n\n\nclass StrictEventEmitter extends Emitter {\n  /**\n   * Adds the `listener` function as an event listener for `ev`.\n   *\n   * @param ev Name of the event\n   * @param listener Callback function\n   */\n  on(ev, listener) {\n    super.on(ev, listener);\n    return this;\n  }\n  /**\n   * Adds a one-time `listener` function as an event listener for `ev`.\n   *\n   * @param ev Name of the event\n   * @param listener Callback function\n   */\n\n\n  once(ev, listener) {\n    super.once(ev, listener);\n    return this;\n  }\n  /**\n   * Emits an event.\n   *\n   * @param ev Name of the event\n   * @param args Values to send to listeners of this event\n   */\n\n\n  emit(ev) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    super.emit(ev, ...args);\n    return this;\n  }\n  /**\n   * Emits a reserved event.\n   *\n   * This method is `protected`, so that only a class extending\n   * `StrictEventEmitter` can emit its own reserved events.\n   *\n   * @param ev Reserved event name\n   * @param args Arguments to emit along with the event\n   */\n\n\n  emitReserved(ev) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    super.emit(ev, ...args);\n    return this;\n  }\n  /**\n   * Returns the listeners listening to an event.\n   *\n   * @param event Event name\n   * @returns Array of listeners subscribed to `event`\n   */\n\n\n  listeners(event) {\n    return super.listeners(event);\n  }\n\n}\n\nexports.StrictEventEmitter = StrictEventEmitter;","map":{"version":3,"names":["Object","defineProperty","exports","value","StrictEventEmitter","Emitter","require","on","ev","listener","once","emit","args","emitReserved","listeners","event"],"sources":["C:/Users/Admin/Documents/GitHub/Project/Book-Social-Network/frontend/node_modules/socket.io-client/build/typed-events.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrictEventEmitter = void 0;\nconst Emitter = require(\"component-emitter\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends Emitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        super.on(ev, listener);\n        return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        super.once(ev, listener);\n        return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMF,kBAAN,SAAiCC,OAAjC,CAAyC;EACrC;AACJ;AACA;AACA;AACA;AACA;EACIE,EAAE,CAACC,EAAD,EAAKC,QAAL,EAAe;IACb,MAAMF,EAAN,CAASC,EAAT,EAAaC,QAAb;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIC,IAAI,CAACF,EAAD,EAAKC,QAAL,EAAe;IACf,MAAMC,IAAN,CAAWF,EAAX,EAAeC,QAAf;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIE,IAAI,CAACH,EAAD,EAAc;IAAA,kCAANI,IAAM;MAANA,IAAM;IAAA;;IACd,MAAMD,IAAN,CAAWH,EAAX,EAAe,GAAGI,IAAlB;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,YAAY,CAACL,EAAD,EAAc;IAAA,mCAANI,IAAM;MAANA,IAAM;IAAA;;IACtB,MAAMD,IAAN,CAAWH,EAAX,EAAe,GAAGI,IAAlB;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIE,SAAS,CAACC,KAAD,EAAQ;IACb,OAAO,MAAMD,SAAN,CAAgBC,KAAhB,CAAP;EACH;;AApDoC;;AAsDzCb,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B"},"metadata":{},"sourceType":"script"}