{"ast":null,"code":"const {\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n} = require(\"./commons\");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nlet base64decoder;\n\nif (withNativeArrayBuffer) {\n  base64decoder = require(\"base64-arraybuffer\");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n\n  const type = encodedPacket.charAt(0);\n\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n\n  const packetType = PACKET_TYPES_REVERSE[type];\n\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n\n  return encodedPacket.length > 1 ? {\n    type: PACKET_TYPES_REVERSE[type],\n    data: encodedPacket.substring(1)\n  } : {\n    type: PACKET_TYPES_REVERSE[type]\n  };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return {\n      base64: true,\n      data\n    }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n\n    case \"arraybuffer\":\n    default:\n      return data;\n    // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;","map":{"version":3,"names":["PACKET_TYPES_REVERSE","ERROR_PACKET","require","withNativeArrayBuffer","ArrayBuffer","base64decoder","decodePacket","encodedPacket","binaryType","type","data","mapBinary","charAt","decodeBase64Packet","substring","packetType","length","decoded","decode","base64","Blob","module","exports"],"sources":["C:/Users/Admin/Documents/GitHub/Project/Book-Social-Network/frontend/node_modules/engine.io-parser/lib/decodePacket.browser.js"],"sourcesContent":["const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require(\"./commons\");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\nlet base64decoder;\nif (withNativeArrayBuffer) {\n  base64decoder = require(\"base64-arraybuffer\");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return { base64: true, data }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case \"arraybuffer\":\n    default:\n      return data; // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;\n"],"mappings":"AAAA,MAAM;EAAEA,oBAAF;EAAwBC;AAAxB,IAAyCC,OAAO,CAAC,WAAD,CAAtD;;AAEA,MAAMC,qBAAqB,GAAG,OAAOC,WAAP,KAAuB,UAArD;AAEA,IAAIC,aAAJ;;AACA,IAAIF,qBAAJ,EAA2B;EACzBE,aAAa,GAAGH,OAAO,CAAC,oBAAD,CAAvB;AACD;;AAED,MAAMI,YAAY,GAAG,CAACC,aAAD,EAAgBC,UAAhB,KAA+B;EAClD,IAAI,OAAOD,aAAP,KAAyB,QAA7B,EAAuC;IACrC,OAAO;MACLE,IAAI,EAAE,SADD;MAELC,IAAI,EAAEC,SAAS,CAACJ,aAAD,EAAgBC,UAAhB;IAFV,CAAP;EAID;;EACD,MAAMC,IAAI,GAAGF,aAAa,CAACK,MAAd,CAAqB,CAArB,CAAb;;EACA,IAAIH,IAAI,KAAK,GAAb,EAAkB;IAChB,OAAO;MACLA,IAAI,EAAE,SADD;MAELC,IAAI,EAAEG,kBAAkB,CAACN,aAAa,CAACO,SAAd,CAAwB,CAAxB,CAAD,EAA6BN,UAA7B;IAFnB,CAAP;EAID;;EACD,MAAMO,UAAU,GAAGf,oBAAoB,CAACS,IAAD,CAAvC;;EACA,IAAI,CAACM,UAAL,EAAiB;IACf,OAAOd,YAAP;EACD;;EACD,OAAOM,aAAa,CAACS,MAAd,GAAuB,CAAvB,GACH;IACEP,IAAI,EAAET,oBAAoB,CAACS,IAAD,CAD5B;IAEEC,IAAI,EAAEH,aAAa,CAACO,SAAd,CAAwB,CAAxB;EAFR,CADG,GAKH;IACEL,IAAI,EAAET,oBAAoB,CAACS,IAAD;EAD5B,CALJ;AAQD,CA1BD;;AA4BA,MAAMI,kBAAkB,GAAG,CAACH,IAAD,EAAOF,UAAP,KAAsB;EAC/C,IAAIH,aAAJ,EAAmB;IACjB,MAAMY,OAAO,GAAGZ,aAAa,CAACa,MAAd,CAAqBR,IAArB,CAAhB;IACA,OAAOC,SAAS,CAACM,OAAD,EAAUT,UAAV,CAAhB;EACD,CAHD,MAGO;IACL,OAAO;MAAEW,MAAM,EAAE,IAAV;MAAgBT;IAAhB,CAAP,CADK,CAC0B;EAChC;AACF,CAPD;;AASA,MAAMC,SAAS,GAAG,CAACD,IAAD,EAAOF,UAAP,KAAsB;EACtC,QAAQA,UAAR;IACE,KAAK,MAAL;MACE,OAAOE,IAAI,YAAYN,WAAhB,GAA8B,IAAIgB,IAAJ,CAAS,CAACV,IAAD,CAAT,CAA9B,GAAiDA,IAAxD;;IACF,KAAK,aAAL;IACA;MACE,OAAOA,IAAP;IAAa;EALjB;AAOD,CARD;;AAUAW,MAAM,CAACC,OAAP,GAAiBhB,YAAjB"},"metadata":{},"sourceType":"script"}