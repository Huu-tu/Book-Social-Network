{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Project\\\\Book-Social-Network\\\\frontend\\\\src\\\\modules\\\\Post\\\\Pages\\\\cmtPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PostService from \"../Service/service\";\nimport { useSelector } from \"react-redux\";\nimport NotifyService from \"../../../components/Notification/Service/service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CmtPost(_ref) {\n  _s();\n  let {\n    IdPost,\n    Author,\n    Content,\n    image\n  } = _ref;\n  const user = useSelector(state => state.profile.value);\n  const socket = useSelector(state => state.socket.value);\n  const Id_Post = IdPost;\n  const AuthorId = Author;\n  const ContentText = Content;\n  const IImage = image;\n  const [input, setInput] = useState(\"\");\n  const handleChange = event => {\n    setInput(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newForm = {\n      content: input,\n      author: user._id,\n      post: IdPost\n    };\n    const newNotify = {\n      content: ContentText,\n      text: 'Comment the Post',\n      url: `http://localhost:3000/detailPost/${Id_Post}`,\n      recipient: AuthorId,\n      image: IImage\n    };\n    const res = await NotifyService.createNotify(newNotify);\n    socket === null || socket === void 0 ? void 0 : socket.emit('createNotify', {\n      ...res.data.notify,\n      user: {\n        user: user.fullName,\n        avatar: image\n      }\n    });\n    await PostService.cmtPost(newForm);\n\n    // window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-outline mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"comment\",\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"comment\",\n            onChange: handleChange,\n            value: input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CmtPost, \"utODWTXZrjaFgqiFJbgm2yKnhbo=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = CmtPost;\nvar _c;\n$RefreshReg$(_c, \"CmtPost\");","map":{"version":3,"names":["React","useState","PostService","useSelector","NotifyService","jsxDEV","_jsxDEV","Fragment","_Fragment","CmtPost","_ref","_s","IdPost","Author","Content","image","user","state","profile","value","socket","Id_Post","AuthorId","ContentText","IImage","input","setInput","handleChange","event","target","handleSubmit","preventDefault","newForm","content","author","_id","post","newNotify","text","url","recipient","res","createNotify","emit","data","notify","fullName","avatar","cmtPost","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/GitHub/Project/Book-Social-Network/frontend/src/modules/Post/Pages/cmtPost.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport PostService from \"../Service/service\";\r\nimport { useSelector } from \"react-redux\";\r\nimport NotifyService from \"../../../components/Notification/Service/service\";\r\n\r\nexport default function CmtPost({IdPost, Author, Content, image}){\r\n  const user = useSelector((state) =>state.profile.value)\r\n  const socket = useSelector((state) =>state.socket.value)\r\n  const Id_Post = IdPost;\r\n  const AuthorId = Author\r\n  const ContentText = Content\r\n  const IImage = image\r\n  const[input, setInput] = useState(\"\");\r\n\r\n  const handleChange = (event)=>{\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = async (event)=>{\r\n    event.preventDefault();\r\n\r\n    const newForm = {\r\n      content: input,\r\n      author: user._id,\r\n      post: IdPost\r\n    }\r\n\r\n    const newNotify = {\r\n      content: ContentText,\r\n      text:'Comment the Post',\r\n      url: `http://localhost:3000/detailPost/${Id_Post}`,\r\n      recipient: AuthorId,\r\n      image: IImage,\r\n    }\r\n\r\n    const res = await NotifyService.createNotify(newNotify)\r\n\r\n    socket?.emit('createNotify',{\r\n      ...res.data.notify,\r\n      user:{\r\n        user: user.fullName,\r\n        avatar: image,\r\n      }\r\n    })\r\n\r\n    await PostService.cmtPost(newForm);\r\n\r\n    // window.location.reload();\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <div className=\"\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-outline mb-4\">\r\n            <label className=\"form-label\" htmlFor=\"comment\">Comment</label>\r\n            {/*<input type=\"text\" id=\"comment\" name=\"comment\" className=\"form-control\" onChange={handleCmtChange} value={input.content}/>*/}\r\n            <input type=\"text\" name=\"comment\" onChange={handleChange} value={input}/>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">Comment</button>\r\n        </form>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}