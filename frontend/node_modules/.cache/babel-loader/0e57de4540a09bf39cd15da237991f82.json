{"ast":null,"code":"import { Http } from \"../../../api/http\";\nconst API_ENDPOINT = {\n  SHOWPOST: \"/post/showPost\",\n  DETAILPOST: \"/post/detailPost\",\n  GETSINGLEPOST: \"/post/getSinglePost\",\n  GETAUTHOR: \"/post/getAuthor\",\n  CREATEPOST: \"/post/createPost\",\n  UPDATEPOST: \"/post/updatePost\",\n  DELETEPOST: \"/post/deletePost\",\n  LIKEPOST: \"/post/likePost\",\n  DISLIKEPOST: \"/post/disLikePost\",\n  CMTGET: \"/post/cmtGet\",\n  CMTPOST: \"/post/cmtPost\",\n  GETCURRENTUSER: \"/currentUser\",\n  GETIMG: \"/img\"\n};\n\nclass PostServices {\n  showPost() {\n    return Http.get(API_ENDPOINT.SHOWPOST);\n  }\n\n  getAuthor(id) {\n    return Http.get(API_ENDPOINT.GETAUTHOR + `/${id}`);\n  }\n\n  detailPost(id) {\n    return Http.get(API_ENDPOINT.DETAILPOST + `/${id}`);\n  }\n\n  getSinglePost(id) {\n    return Http.get(API_ENDPOINT.GETSINGLEPOST + `/${id}`);\n  }\n\n  createPost(data) {\n    return Http.createPost(API_ENDPOINT.CREATEPOST, data);\n  }\n\n  getImg(img) {\n    return Http.get(API_ENDPOINT.GETIMG`/${img}`);\n  }\n\n  updatePost(id, data) {\n    return Http.post(API_ENDPOINT.UPDATEPOST + `?id=${id}`, data);\n  }\n\n  deletePost(id) {\n    return Http.delete(API_ENDPOINT.DELETEPOST + `?id=${id}`);\n  }\n\n  likePost(id) {\n    return Http.putReactPost(API_ENDPOINT.LIKEPOST, {\n      id\n    });\n  }\n\n  disLikePost(id) {\n    return Http.putReactPost(API_ENDPOINT.DISLIKEPOST, {\n      id\n    });\n  }\n\n  getCurrentUser() {\n    return Http.get(API_ENDPOINT.GETCURRENTUSER);\n  }\n\n  cmtGet(id) {\n    return Http.get(API_ENDPOINT.CMTGET + `/${id}`);\n  }\n\n  cmtPost(data) {\n    return Http.putReactPost(API_ENDPOINT.CMTPOST, data);\n  }\n\n}\n\nconst PostService = new PostServices();\nexport default PostService;","map":{"version":3,"names":["Http","API_ENDPOINT","SHOWPOST","DETAILPOST","GETSINGLEPOST","GETAUTHOR","CREATEPOST","UPDATEPOST","DELETEPOST","LIKEPOST","DISLIKEPOST","CMTGET","CMTPOST","GETCURRENTUSER","GETIMG","PostServices","showPost","get","getAuthor","id","detailPost","getSinglePost","createPost","data","getImg","img","updatePost","post","deletePost","delete","likePost","putReactPost","disLikePost","getCurrentUser","cmtGet","cmtPost","PostService"],"sources":["C:/Users/Admin/Documents/GitHub/Project/Book-Social-Network/frontend/src/modules/Post/Service/service.js"],"sourcesContent":["import {Http} from \"../../../api/http\";\r\n\r\nconst API_ENDPOINT = {\r\n  SHOWPOST: \"/post/showPost\",\r\n  DETAILPOST: \"/post/detailPost\",\r\n  GETSINGLEPOST: \"/post/getSinglePost\",\r\n  GETAUTHOR: \"/post/getAuthor\",\r\n  CREATEPOST: \"/post/createPost\",\r\n  UPDATEPOST: \"/post/updatePost\",\r\n  DELETEPOST: \"/post/deletePost\",\r\n  LIKEPOST: \"/post/likePost\",\r\n  DISLIKEPOST: \"/post/disLikePost\",\r\n  CMTGET: \"/post/cmtGet\",\r\n  CMTPOST: \"/post/cmtPost\",\r\n  GETCURRENTUSER: \"/currentUser\",\r\n  GETIMG: \"/img\"\r\n}\r\n\r\nclass PostServices{\r\n  showPost(){\r\n    return Http.get(API_ENDPOINT.SHOWPOST)\r\n  }\r\n\r\n  getAuthor(id){\r\n    return Http.get(API_ENDPOINT.GETAUTHOR + `/${id}`)\r\n  }\r\n\r\n  detailPost(id){\r\n    return Http.get(API_ENDPOINT.DETAILPOST + `/${id}`)\r\n  }\r\n\r\n  getSinglePost(id){\r\n    return Http.get(API_ENDPOINT.GETSINGLEPOST + `/${id}`)\r\n  }\r\n\r\n  createPost(data){\r\n    return Http.createPost(API_ENDPOINT.CREATEPOST, data)\r\n  }\r\n\r\n  getImg(img){\r\n    return Http.get(API_ENDPOINT.GETIMG `/${img}`)\r\n  }\r\n\r\n  updatePost(id, data){\r\n    return Http.post(API_ENDPOINT.UPDATEPOST + `?id=${id}`, data)\r\n  }\r\n\r\n  deletePost(id){\r\n    return Http.delete(API_ENDPOINT.DELETEPOST + `?id=${id}`)\r\n  }\r\n\r\n  likePost(id){\r\n    return Http.putReactPost(API_ENDPOINT.LIKEPOST, {id})\r\n  }\r\n\r\n  disLikePost(id){\r\n    return Http.putReactPost(API_ENDPOINT.DISLIKEPOST, {id})\r\n  }\r\n\r\n  getCurrentUser(){\r\n    return Http.get(API_ENDPOINT.GETCURRENTUSER)\r\n  }\r\n\r\n  cmtGet(id){\r\n    return Http.get(API_ENDPOINT.CMTGET + `/${id}`)\r\n  }\r\n\r\n  cmtPost(data){\r\n    return Http.putReactPost(API_ENDPOINT.CMTPOST, data)\r\n  }\r\n}\r\n\r\nconst PostService = new PostServices();\r\nexport default PostService;\r\n"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,gBADS;EAEnBC,UAAU,EAAE,kBAFO;EAGnBC,aAAa,EAAE,qBAHI;EAInBC,SAAS,EAAE,iBAJQ;EAKnBC,UAAU,EAAE,kBALO;EAMnBC,UAAU,EAAE,kBANO;EAOnBC,UAAU,EAAE,kBAPO;EAQnBC,QAAQ,EAAE,gBARS;EASnBC,WAAW,EAAE,mBATM;EAUnBC,MAAM,EAAE,cAVW;EAWnBC,OAAO,EAAE,eAXU;EAYnBC,cAAc,EAAE,cAZG;EAanBC,MAAM,EAAE;AAbW,CAArB;;AAgBA,MAAMC,YAAN,CAAkB;EAChBC,QAAQ,GAAE;IACR,OAAOhB,IAAI,CAACiB,GAAL,CAAShB,YAAY,CAACC,QAAtB,CAAP;EACD;;EAEDgB,SAAS,CAACC,EAAD,EAAI;IACX,OAAOnB,IAAI,CAACiB,GAAL,CAAShB,YAAY,CAACI,SAAb,GAA0B,IAAGc,EAAG,EAAzC,CAAP;EACD;;EAEDC,UAAU,CAACD,EAAD,EAAI;IACZ,OAAOnB,IAAI,CAACiB,GAAL,CAAShB,YAAY,CAACE,UAAb,GAA2B,IAAGgB,EAAG,EAA1C,CAAP;EACD;;EAEDE,aAAa,CAACF,EAAD,EAAI;IACf,OAAOnB,IAAI,CAACiB,GAAL,CAAShB,YAAY,CAACG,aAAb,GAA8B,IAAGe,EAAG,EAA7C,CAAP;EACD;;EAEDG,UAAU,CAACC,IAAD,EAAM;IACd,OAAOvB,IAAI,CAACsB,UAAL,CAAgBrB,YAAY,CAACK,UAA7B,EAAyCiB,IAAzC,CAAP;EACD;;EAEDC,MAAM,CAACC,GAAD,EAAK;IACT,OAAOzB,IAAI,CAACiB,GAAL,CAAShB,YAAY,CAACa,MAAQ,IAAGW,GAAI,EAArC,CAAP;EACD;;EAEDC,UAAU,CAACP,EAAD,EAAKI,IAAL,EAAU;IAClB,OAAOvB,IAAI,CAAC2B,IAAL,CAAU1B,YAAY,CAACM,UAAb,GAA2B,OAAMY,EAAG,EAA9C,EAAiDI,IAAjD,CAAP;EACD;;EAEDK,UAAU,CAACT,EAAD,EAAI;IACZ,OAAOnB,IAAI,CAAC6B,MAAL,CAAY5B,YAAY,CAACO,UAAb,GAA2B,OAAMW,EAAG,EAAhD,CAAP;EACD;;EAEDW,QAAQ,CAACX,EAAD,EAAI;IACV,OAAOnB,IAAI,CAAC+B,YAAL,CAAkB9B,YAAY,CAACQ,QAA/B,EAAyC;MAACU;IAAD,CAAzC,CAAP;EACD;;EAEDa,WAAW,CAACb,EAAD,EAAI;IACb,OAAOnB,IAAI,CAAC+B,YAAL,CAAkB9B,YAAY,CAACS,WAA/B,EAA4C;MAACS;IAAD,CAA5C,CAAP;EACD;;EAEDc,cAAc,GAAE;IACd,OAAOjC,IAAI,CAACiB,GAAL,CAAShB,YAAY,CAACY,cAAtB,CAAP;EACD;;EAEDqB,MAAM,CAACf,EAAD,EAAI;IACR,OAAOnB,IAAI,CAACiB,GAAL,CAAShB,YAAY,CAACU,MAAb,GAAuB,IAAGQ,EAAG,EAAtC,CAAP;EACD;;EAEDgB,OAAO,CAACZ,IAAD,EAAM;IACX,OAAOvB,IAAI,CAAC+B,YAAL,CAAkB9B,YAAY,CAACW,OAA/B,EAAwCW,IAAxC,CAAP;EACD;;AAnDe;;AAsDlB,MAAMa,WAAW,GAAG,IAAIrB,YAAJ,EAApB;AACA,eAAeqB,WAAf"},"metadata":{},"sourceType":"module"}